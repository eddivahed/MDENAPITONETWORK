# fabric-config.yaml
name: "my-network"
version: 1.0.0

client:
  organization: "Org1"
  logging:
    level: "debug"
  connection:
    timeout:
      peer:
        endorser: "300"
      orderer: "300"

  peer:
    timeout:
      connection: 10s
      response: 180s
      discovery:
        greylistExpiry: 10s

  eventService:
    timeout:
      connection: 10s
      registrationResponse: 10s

  orderer:
    timeout:
      connection: 10s
      response: 15s

  cryptoconfig:
    path: "../fabric-samples/test-network/organizations"

  credentialStore:
    path: "/tmp/state-store"
    cryptoStore:
      path: "/tmp/msp"

  BCCSP:
    security:
      enabled: true
      default:
        provider: "SW"
      hashAlgorithm: "SHA2"
      softVerify: true
      level: 256

channels:
  mychannel:
    orderers:
      - orderer.example.com
    peers:
      peer0.org1.example.com:
        endorsingPeer: true
        chaincodeQuery: true
        ledgerQuery: true
        eventSource: true

organizations:
  Org1:
    mspid: Org1MSP
    cryptoPath: "/Users/amirh/Documents/BlogsContents/MDENBlockchain/fabric-samples/test-network/organizations/peerOrganizations/org1.example.com/users/{username}@org1.example.com/msp"
    peers:
      - peer0.org1.example.com
    certificateAuthorities:
      - ca.org1.example.com
    adminPrivateKeyPEM:
      path: "/Users/amirh/Documents/BlogsContents/MDENBlockchain/fabric-samples/test-network/organizations/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/keystore/547cd68ff2b87bbcdcd7d50ea55a2d57dfe6b20cd92b933687a9b39d7812e357_sk"
    signedCertPEM:
      path: "/Users/amirh/Documents/BlogsContents/MDENBlockchain/fabric-samples/test-network/organizations/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/signcerts/cert.pem"
      
orderers:
  orderer.example.com:
    url: "grpcs://localhost:7050"
    grpcOptions:
      ssl-target-name-override: "orderer.example.com"
      keep-alive-time: 0s
      keep-alive-timeout: 20s
      keep-alive-permit: false
      fail-fast: false
      allow-insecure: false
    tlsCACerts:
      path: "/Users/amirh/Documents/BlogsContents/MDENBlockchain/fabric-samples/test-network/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem"

peers:
  peer0.org1.example.com:
    url: "grpcs://localhost:7051"
    grpcOptions:
      ssl-target-name-override: "peer0.org1.example.com"
      keep-alive-time: 0s
      keep-alive-timeout: 20s
      keep-alive-permit: false
      fail-fast: false
      allow-insecure: false
    tlsCACerts:
      path: "/Users/amirh/Documents/BlogsContents/MDENBlockchain/fabric-samples/test-network/organizations/peerOrganizations/org1.example.com/tlsca/tlsca.org1.example.com-cert.pem"

certificateAuthorities:
  ca.org1.example.com:
    url: https://localhost:7054
    tlsCACerts:
      path: "/Users/amirh/Documents/BlogsContents/MDENBlockchain/fabric-samples/test-network/organizations/peerOrganizations/org1.example.com/ca/ca.org1.example.com-cert.pem"
    registrar:
      enrollId: "admin"
      enrollSecret: "adminpw"
    caName: ca-org1
      
entityMatchers:
  peer:
    - pattern: "(\\w*)peer0.org1.example.com(\\w*)"
      urlSubstitutionExp: "grpcs://localhost:7051"
      sslTargetOverrideUrlSubstitutionExp: "peer0.org1.example.com"
      mappedHost: "peer0.org1.example.com"